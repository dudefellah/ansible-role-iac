---
# tasks file for ansible-role-iac
- name: Install EPEL
  ansible.builtin.package:
    name: "epel-release"
    state: present
  when:
    - "iac_el_install_epel|bool"
    - "ansible_os_family == 'RedHat'"

- name: Install packages
  ansible.builtin.package:
    name: "{{ iac_packages }}"
    state: present
  tags:
    - packages

- name: Get role facts
  include_tasks: _iac_gather_facts.yml

- name: Create directories
  ansible.builtin.file:
    path: "{{ _iac_root_path }}{{ _iac_dir.path }}"
    state: directory
    mode: "{{ _iac_dir.mode | default(iac_default_dir_mode) }}"
    owner: "{{ iac_user | default(omit) }}"
    group: "{{ iac_group | default(omit) }}"
  loop: "{{ iac_directories }}"
  loop_control:
    loop_var: _iac_dir

- name: Install config content files
  ansible.builtin.copy:
    content: "{{ _iac_cfg.content }}"
    dest: >-
      {%- if _iac_cfg.dest.startswith('/') -%}
        {{ _iac_cfg.dest }}
      {%- else -%}
        {{ _iac_root_path }}{{ _iac_cfg.dest }}
      {%- endif -%}
    mode: "{{ _iac_cfg.mode | default(iac_default_mode) }}"
    owner: "{{ iac_user | default(omit) }}"
    group: "{{ iac_group | default(omit) }}"
  no_log: "{{ iac_no_log }}"
  vars:
    date: "{{ ansible_date_time.date }}"
    iso8601: "{{ ansible_date_time.iso8601 }}"
    host: "{{ _iac_ansible_controller_hostname }}"
    uid: "{{ ansible_user_id }}"
  loop: >-
    {{ iac_config_files
       | selectattr('content', 'defined')
       | rejectattr('content', 'none')
       | list }}
  loop_control:
    loop_var: _iac_cfg

- name: Install config template files
  ansible.builtin.template:
    src: "{{ _iac_cfg.src }}"
    dest: >-
      {%- if _iac_cfg.dest.startswith('/') -%}
        {{ _iac_cfg.dest }}
      {%- else -%}
        {{ _iac_root_path }}{{ _iac_cfg.dest }}
      {%- endif -%}
    mode: "{{ _iac_cfg.mode | default(iac_default_mode) }}"
    owner: "{{ iac_user | default(omit) }}"
    group: "{{ iac_group | default(omit) }}"
    validate: "{{ _iac_cfg.validate | default(omit) }}"
  no_log: "{{ iac_no_log }}"
  vars:
    date: "{{ ansible_date_time.date }}"
    iso8601: "{{ ansible_date_time.iso8601 }}"
    host: "{{ _iac_ansible_controller_hostname }}"
    uid: "{{ ansible_user_id }}"
    iac_vars: "{{ _iac_cfg.vars | default(iac_config_vars) }}"
  loop: >-
    {{ iac_config_files
       | selectattr('src', 'defined')
       | rejectattr('src', 'none')
       | list }}
  loop_control:
    loop_var: _iac_cfg

- name: Set the service state
  ansible.builtin.service:
    name: "{{ iac_service_name }}"
    state: "{{ iac_service_state }}"
  when:
    - "iac_service_name is not none"
    - "iac_service_state is not none"

- name: Enable/disable the service
  ansible.builtin.service:
    name: "{{ iac_service_name }}"
    enabled: "{{ iac_service_enabled }}"
  when:
    - "iac_service_name is not none"
    - "iac_service_enabled is not none"
